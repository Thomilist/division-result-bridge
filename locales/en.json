{
    "meta":
    {
        "id": "en",
        "name": "English",
        "flag": "ðŸ‡¬ðŸ‡§"
    },
    "project":
    {
        "name": "Division Result Bridge",
        "author": "Thomas Emil Jensen",
        "logo":
        {
            "alt": "The project logo. A round icon with two colours: White in the top left and orange in the bottom right. It resembles an orienteering flag."
        }
    },
    "footer":
    {
        "open-source": "Division Result Bridge is free and open source software published under the MIT license"
    },
    "options":
    {
        "name": "Options",
        "theme":
        {
            "name": "Theme"
        },
        "language":
        {
            "name": "Language"
        }
    },
    "theme":
    {
        "system":
        {
            "name": "System"
        },
        "light":
        {
            "name": "Light"
        },
        "dark":
        {
            "name": "Dark"
        },
        "oled":
        {
            "name": "OLED"
        }
    },
    "language":
    {
        "undefined":
        {
            "name": "undefined"
        },
        "system":
        {
            "name": "System"
        },
        "da":
        {
            "name": "Dansk"
        },
        "en":
        {
            "name": "English"
        }
    },
    "ui":
    {
        "tip": "Tip",
        "warning": "Careful"
    },
    "page":
    {
        "home":
        {
            "title": "Division Result Bridge",
            "subtitle": "Manage live, online results for orienteering division matches with ease",
            "highlights":
            {
                "compatibility":
                {
                    "title": "Simple Requirements",
                    "content": "If your division results are provided by <a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a>, then you can use Division Result Bridge. Additional functionality, such as only updating results upon change or importing metadata during setup, is available depending on your configuration."
                },
                "setup":
                {
                    "title": "Prepare From Home",
                    "content": "Configure and test your setup from the comfort of your home, minimising stress on event day. Store and transfer your competition settings with configuration files."
                },
                "foss":
                {
                    "title": "Free and open source",
                    "content": "Division Result Bridge is free and open source software published under the MIT license. Its purpose is merely to improve the experience at orienteering division matches, both for participants and organisers. It is and always will be free to use; profit is not a goal."
                }
            }
        },
        "download":
        {
            "title": "Download",
            "empty":
            {
                "title": "Something Went Grong",
                "message": "Releases could not be fetched. However, if there are any, they will be available at <a href=\"{releases_link}\" target=\"_blank\">the Releases page on GitHub</a>."
            },
            "latest":
            {
                "header": "Ready to leave your printer at home?",
                "button": "Download Latest Version",
                "details":
                {
                    "version": "Version {version} &middot; {platform} &middot; {arch}",
                    "file": "{format} &middot; {size}"
                }
            },
            "releases":
            {
                "title": "All Releases",
                "loading": "Loading data...",
                "prerelease": "Pre-release",
                "notes": "Release Notes",
                "files":
                {
                    "empty": "No files attached to this release.",
                    "labels":
                    {
                        "name": "File",
                        "platform": "Platform",
                        "arch": "CPU Arch",
                        "format": "Format",
                        "size": "Size"
                    }
                },
                "github": "View on GitHub"
            }
        },
        "docs":
        {
            "title": "Documentation",
            "nav":
            {
                "on-this-page": "On this page",
                "previous": "Previous",
                "next": "Next"
            },
            "collection":
            {
                "undefined":
                {
                    "title": "Error",
                    "page":
                    {
                        "undefined":
                        {
                            "title": "Page not found",
                            "message": "Looks like there's nothing here. Feel free to check out one of the pages from the menu on the left instead."
                        }
                    }
                },
                "preface":
                {
                    "title": "Preface",
                    "page":
                    {
                        "introduction":
                        {
                            "title": "Introduction",
                            "section":
                            {
                                "main":
                                {
                                    "welcome": "Welcome to the {bridge_name} documentation! The pages here serve as a usage guide for the program aimed at division match organisers. If you'd like to give it a try, I suggest reading the <a href=\"{getting_started_link}\">getting started series</a> in order. This will take you all the way from initial installation to execution on the day of the event."
                                },
                                "what":
                                {
                                    "title": "What does it do?",
                                    "description": "{bridge_name} is a desktop application intended to fascilitate live, online presentation of orienteering division results. To do so, it exchanges data on two fronts. The first is the result source. In essence, this involves drawing division results out of <a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a>. The second front is with the presentation server, which is an instance of <a href=\"{server_link}\" target=\"_blank\">{server_name}</a>. It is then the task of {bridge_name} to <i>bridge</i> the gap between the two fronts (hence the name), ensuring the right results are packaged correctly and are sent to the right destination."
                                },
                                "motivation":
                                {
                                    "title": "Motivation",
                                    "live-results": "Any competition would be meaningless without results, and having access to the results early is usually preferable. Orienteering is no exception. For conventional events, where runners compete individually, live publication of results can easily be achieved with the online service <a href=\"{liveresults_link}\" target=\"_blank\">{liveresults_name}</a>. However, the service does not lend itself well to all types of events.",
                                    "division-matches": "In Denmark, entire clubs regularly compete against each other in divisions. Results are determined by a points-scoring system, with runners scoring points on behalf of their clubs based on their individual results. Typically, the points are calculated with the program <a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a>, but options for live publication of results online are rather limited.",
                                    "problem": "While <a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a> can output division results in presentable HTML format, it takes some effort to make these accessible over the web &mdash; and particularly to keep them up to date as new results roll in. Network conditions at orienteering events further complicate the matter, as connection to the wider internet is often established over mobile data. This typically implies the use of <a href=\"{cgnat_link}\" target=\"_blank\">{cgnat_name}</a>, rendering servers behind it invisible to the wider internet.",
                                    "solution": "One solution is to send the HTML files to a server on a visible address, which can then be accessed to view the results. However, setting this up demands additional effort and knowledge from the organiser. The intention of {bridge_name} and <a href=\"{server_link}\" target=\"_blank\">{server_name}</a> is to lower the barrier to entry enough that providing live, online division results becomes a small and easy task."
                                }
                            }
                        }
                    }
                },
                "getting-started":
                {
                    "title": "Getting started",
                    "page":
                    {
                        "prerequisites":
                        {
                            "title": "Prerequisites",
                            "section":
                            {
                                "main":
                                {
                                    "intro": "Before we dive in, let's have a look at the requirements to ensure that it makes sense to begin at all."
                                },
                                "requirements":
                                {
                                    "title": "Requirements",
                                    "section":
                                    {
                                        "system":
                                        {
                                            "title": "System",
                                            "intro": "The requirements for the computer on which {bridge_name} itself runs are as follows:",
                                            "req0": "{win}",
                                            "req1": "{storage} of storage",
                                            "req2": "Internet connection",
                                            "req3": "{cpu_arch} processor architecture",
                                            "other_systems": "At the moment, releases on the download page only target {win} computers with {cpu_arch} processors, as this is the most common case. It is primarily tested on {win10}, but it should work just fine on other modern {win} versions as well. For other operating systems and processor architectures, there are still a few possibilities: The program can be run through an emulation layer, or, since the source code is freely available, it can be compiled for the native architectures and operating systems of other computers."
                                        },
                                        "surrounding-setup":
                                        {
                                            "title": "Surrounding setup",
                                            "intro": "In this context, the surrounding setup refers to the software solutions in use alongside {bridge_name}. At the very least, two pieces of software are required:",
                                            "req0": "<a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a>",
                                            "req1": "<a href=\"{server_link}\" target=\"_blank\">{server_name}</a>",
                                            "optional": "Beyond that, we are free to choose whatever we feel most comfortable with. However, some non-essential features are not available in all configurations, requiring one or more of the following:",
                                            "opt0": "<a href=\"{meos_link}\" target=\"_blank\">{meos_name}</a> version {meos_minimum_version} or newer",
                                            "opt1": "Results regularly written to a file in {result_format} format",
                                            "optional-details": "These optional requirements will be described in greater detail when the associated features are introduced."
                                        }
                                    }
                                }
                            }
                        },
                        "installation":
                        {
                            "title": "Installation",
                            "intro": "Installing or updating {bridge_name} is rather easy, if a little primitive.",
                            "section":
                            {
                                "fresh-install":
                                {
                                    "title": "Fresh install",
                                    "download": "We head to the <a href=\"{download_page_link}\">download page</a> and grab the latest release, as this is the version the documentation pertains to. The download consists of a single ZIP archive.",
                                    "extract": "We then extract the ZIP archive to a location of our choice. The exact location is irrelevant; even a USB flash drive will do, and we can always move it later. The extraction should yield a single folder, which contains {bridge_name} and its dependencies. Within the folder, we find <span class=\"named\">{bridge_exe_name}</span> &mdash; opening it will start the program. And that's it! Installation is complete."
                                },
                                "update":
                                {
                                    "title": "Update",
                                    "main": "There is no specific update workflow. Instead, we simply follow the process outlined above for a fresh installation, this time downloading the <i>new</i> latest version. We are free to keep the old version around, but since some of the dependencies may have changed, different installations should not be mixed &mdash; they should be kept in separate folders.",
                                    "settings": "Program and competition settings are not stored in the installation folder. Instead, they are automatically saved to a standard location on the computer (e.g. the registry on {win}). This means different versions of the program will use the same settings.",
                                    "semver": "{bridge_name} uses <a href=\"{semver_link}\" target=\"_blank\">semantic versioning</a> to differentiate releases. A new major version implies breaking changes, and these will be described in the release notes along with a migration strategy."
                                }
                            }
                        },
                        "create-competition":
                        {
                            "title": "Create competition",
                            "launch": "We begin by opening {bridge_name}. We should see a window looking something like this:",
                            "image":
                            {
                                "initial-interface":
                                {
                                    "alt": "The interface of {bridge_name} at first launch.",
                                    "caption": "The interface of {bridge_name} at first launch."
                                }
                            },
                            "section":
                            {
                                "page1":
                                {
                                    "open-wizard": "We then open the <span class=\"named\">{comp_menu}</span> menu in the top left corner, and select <span class=\"named\">{create_new}</span>. The competition creation wizard should open:",
                                    "next": "This page is just for introduction, so let's go ahead and press <span class=\"named\">{next}</span>.",
                                    "image":
                                    {
                                        "wizard":
                                        {
                                            "alt": "Competition creation wizard, page 1: A brief message to introduce the process.",
                                            "caption": "Competition creation wizard, page 1: Introduction."
                                        }
                                    }
                                },
                                "page2":
                                {
                                    "title": "Compatibility",
                                    "intro": "The first choice we make involves the result source. This is where the optional requirements and non-essential features mentioned earlier enter the picture.",
                                    "meaning": "The result source determines how {bridge_name} fetches division results. The choice depends on our setup, but the differences in functionality are not major. We shouldn't stress too much over this decision; we can always change it later, and your our likely won't notice anyways.",
                                    "image":
                                    {
                                        "wizard":
                                        {
                                            "alt": "Competition creation wizard, page 2: A choice between the three different result source options.",
                                            "caption": "Competition creation wizard, page 2: Compatibility and result source."
                                        }
                                    },
                                    "section":
                                    {
                                        "meos-divi":
                                        {
                                            "title": "{meos_divi_title}",
                                            "what": "If we use {meos_name} to manage results at our event, we can choose this option. This allows us to import metadata like competition name, organiser and date directly from {meos_name}, and although result updates are run on a timer, it let's {bridge_name} check if the results have changed before uploading, saving a bit of bandwidth.",
                                            "how": "In this mode, {bridge_name} invokes {divi_name} from the command line once per division when updating results, and intermediate files are written to disk. This means it is not necessary to have {divi_name} open, but it also means one or a few seconds of latency are added for each division. {bridge_name} and {divi_name} must also be on the same computer. {meos_name} is accessed through its information server, so while it <i>can</i> be on the same computer as well, it doesn't have to &mdash; it can be anywhere reachable on the network."
                                        },
                                        "divi":
                                        {
                                            "title": "{divi_title}",
                                            "what": "This mode has the fewest requirements, since it only depends on {divi_name}, which we most likely already need for the division match itself. Result updates are run on a timer, but no difference check is performed. It is, however, fairly quick, often finishing a result update sequence in less than a second.",
                                            "how": "Communication happens via {divi_name}'s information server. This means one instance of {divi_name} per division must be kept open, but these instances and {bridge_name} do not need to be on the same computer (although they <i>can</i> be), as long as {bridge_name} can reach the instances of {divi_name} over the network."
                                        },
                                        "xml-divi":
                                        {
                                            "title": "{xml_divi_title}",
                                            "what": "Besides {divi_name}, this option requires access to an {iof_xml} results file. The name and location of the results file must remain the same while running, but the contents should be kept up to date. {bridge_name} monitors the results file for changes and, when detected, triggers an update. How the {iof_xml} results file is produced is irrelevant.",
                                            "how": "As with the first mode with {meos_name}, {bridge_name} invokes {divi_name} from the command line once per division when updating results, so the limitations are similar: {bridge_name} and {divi_name} must be on the same computer, and the result update has a bit of latency per division. However, {divi_name} need not be open."
                                        }
                                    }
                                },
                                "page3":
                                {
                                    "title": "Password",
                                    "intro": "Next, we will choose a password for our competition. Before we choose, we must consider the following:",
                                    "insecure": "The password is insecure",
                                    "immutable": "The password cannot be changed",
                                    "implication": "In this context, \"insecure\" means that the password is stored in plain text, be it on our computer, in transit over the internet, or on the server. Therefore, we should assume that anyone could easily gain access to it, and we should <i>not</i> reuse a password from another service.",
                                    "purpose": "We will need the password whenever we make changes to the competition on the server, including modifying metadata and updating results. No need to stress about writing it down, however, as the summary page at the end will fascilitate that.",
                                    "image":
                                    {
                                        "wizard":
                                        {
                                            "alt": "Competition creation wizard, page 3: A password field filled in with \"{example_password}\" as an example.",
                                            "caption": "Competition creation wizard, page 3: Password."
                                        }
                                    }
                                },
                                "page4":
                                {
                                    "title": "Server",
                                    "intro": "Finally, we need to specify the address of the <a href=\"{server_link}\" target=\"_blank\">{server_name}</a> on which our results will be hosted. This can be a domain name or a raw IP address. The server will need to be online in order to create our competition.",
                                    "default": "The address field may already be filled out with a suggestion. If we are lucky, it points to an active server instance run by myself. Pressing <span class=\"named\">{next}</span> will send a request to the specified server, asking it to create a new competition.",
                                    "image":
                                    {
                                        "wizard":
                                        {
                                            "alt": "Competition creation wizard, page 4: A server address field filled in with \"{example_server_address}\" as an example.",
                                            "caption": "Competition creation wizard, page 4: Server."
                                        }
                                    }
                                },
                                "page5":
                                {
                                    "title": "Server Response",
                                    "section":
                                    {
                                        "success":
                                        {
                                            "title": "Successful request",
                                            "intro": "If an instance of <a href=\"{server_link}\" target=\"_blank\">{server_name}</a> was indeed available on the specified address, and the request to create a new competition was successful, we should see a glimpse of a page looking something like this:",
                                            "next": "It won't be visible for long, as the next page is triggered immediately upon success.",
                                            "image":
                                            {
                                                "wizard":
                                                {
                                                    "alt": "Competition creation wizard, page 5: Log output from communication with the server after a successful request.",
                                                    "caption": "Competition creation wizard, page 5: Server response after successful request."
                                                }
                                            }
                                        },
                                        "error":
                                        {
                                            "title": "Failed request",
                                            "intro": "If, however, the request failed, we will be met with a different message, and the {response_title} page will remain active, suggesting a few troubleshooting steps:",
                                            "troubleshooting": "We can go back to the previous page to ensure the address is correct. As before, pressing <span class=\"named\">{next}</span> on that page sends a request to the server. Of course, we should also check our internet connection. If we are certain that the address is correct and our connection is good, but the server still doesn't respond, the problem may reside with the server itself. In this case, we may be able to contact the server administrator to remedy the situation. Alternatively, we can host an instance of <a href=\"{server_link}\" target=\"_blank\">{server_name}</a> ourselves and use that instead.",
                                            "image":
                                            {
                                                "wizard":
                                                {
                                                    "alt": "Competition creation wizard, page 5, error: Log output from communication with the server. The request was not successful, so some troubleshooting steps are suggested.",
                                                    "caption": "Competition creation wizard, page 5: Server response after failed request."
                                                }
                                            }
                                        }
                                    }
                                },
                                "page6":
                                {
                                    "title": "Summary",
                                    "intro": "If we reach this page, we have successfully created our competition. The summary presents key information that we will need in order to use the competition:",
                                    "use-now": "If we leave <span class=\"named\">{use_now}</span> checked, this information will be applied by {bridge_name} automatically as soon as we press <span class=\"named\">{finish}</span>, erasing any data currently held in the main window. Then, we will be able to export our configuration to a file, backing up this key information easily.",
                                    "use-later": "If we instead uncheck <span class=\"named\">{use_now}</span>, it is up to us to store the information. We can copy the text with the button in the top right corner of the field, and then manually paste it into a text file.",
                                    "image":
                                    {
                                        "wizard":
                                        {
                                            "alt": "Competition creation wizard, page 6: A summary of the new competition showing the server address, competition ID and password. An option to use it right away is checked.",
                                            "caption": "Competition creation wizard, page 6: Summary."
                                        }
                                    }
                                }
                            }
                        },
                        "configuration":
                        {
                            "title": "Configuration",
                            "intro": "Before we work on the details specific to our competition, we will do some basic configuration of {bridge_name} itself. The exact steps vary depending which result source is selected. We first chose the result source early in the competition creation process. If we have since changed our minds, we can head to the <span class=\"named\">{compatibility}</span> menu, and then choose a different option under <span class=\"named\">{result_source}</span>. We can always change it again later without losing any configuration data.",
                            "working-directory": "Common for all result sources, however, is the need for a working directory. Let's head to the <span class=\"named\">{update_results}</span> pane, where we will find a field labeled <span class=\"named\">{working_directory}</span>. This field contains the path to a directory to which {bridge_name} will write logs and a variety of temporary files. We can change it with the <span class=\"named boxed\">{path_button}</span> button. Any writable location will do, though it can be nice to keep it close to other event files. No matter the chosen directory, we must ensure it isn't used for anything else &mdash; existing files in the working directory may be overwritten.",
                            "image":
                            {
                                "result-source":
                                {
                                    "alt": "The main program interface with the <span class=\"named\">{compatibility}</span> menu open, showing the different options under <span class=\"named\">{result_source}</span>.",
                                    "caption": "<span class=\"named\">{result_source}</span> options under the <span class=\"named\">{compatibility}</span> menu."
                                },
                                "working-directory":
                                {
                                    "alt": "The main program interface with the <span class=\"named\">{working_directory}</span> field in the <span class=\"named\">{update_results}</span> pane highlighted.",
                                    "caption": "The <span class=\"named\">{working_directory}</span> field in the <span class=\"named\">{update_results}</span> pane."
                                }
                            },
                            "section":
                            {
                                "meos-divi":
                                {
                                    "title": "{meos_divi_name}",
                                    "intro": "When the result source is set to <span class=\"named\">{meos_divi_name}</span>, the <span class=\"named\">{result_source}</span> pane appears with two fields.",
                                    "divi-exe-path": "The first field specifies the path to the {divi} executable, which {bridge_name} needs in order to run it from the command line. We can set the path by pressing the <span class=\"named boxed\">{path_button}</span> button, then navigating to <span class=\"named\">{divi_exe}</span> in the file dialog.",
                                    "meos-server-address": "The second field holds the address on which <a href=\"{meos_info_server_link}\" target=\"_blank\">{meos_name}' information server</a> will be accessed. To start the information server, we open our competition in {meos_name}, navigate to the <span class=\"named\">Services</span> tab, and select <span class=\"named\">Information Server</span>. The default address suggested by {bridge_name} corresponds to the default information server settings in {meos_name} when both are running on the same computer.",
                                    "meos-server-test": "Once the information server is started, we can verify the connection with the <span class=\"named\">{test_button}</span> button. The result should show up in the log.",
                                    "image":
                                    {
                                        "comp-created":
                                        {
                                            "alt": "The main program interface using the <span class=\"named\">{meos_divi_name}</span> result source. The <span class=\"named\">{result_source}</span> pane highlighted.",
                                            "caption": "The <span class=\"named\">{result_source}</span> pane when using the <span class=\"named\">{meos_divi_name}</span> option."
                                        },
                                        "meos-services-tab":
                                        {
                                            "alt": "The <span class=\"named\">Information Server</span> feature in {meos_name}' <span class=\"named\">Services</span> tab.",
                                            "caption": "The <span class=\"named\">Information Server</span> feature in {meos_name}' <span class=\"named\">Services</span> tab."
                                        },
                                        "meos-server-test-response":
                                        {
                                            "alt": "Example log output after the connection to {meos_name}' information server has been verified successfully.",
                                            "caption": "Example log output after the connection to {meos_name}' information server has been verified successfully."
                                        }
                                    }
                                },
                                "divi":
                                {
                                    "title": "{divi_name}",
                                    "intro": "When the result source is set to <span class=\"named\">{divi_name}</span>, the <span class=\"named\">{result_source}</span> pane is hidden. We can safely move on to the next page of this guide.",
                                    "image":
                                    {
                                        "comp-created":
                                        {
                                            "alt": "The main program interface using the <span class=\"named\">{divi_name}</span> result source. The <span class=\"named\">{result_source}</span> pane highlighted.",
                                            "caption": "The <span class=\"named\">{result_source}</span> pane is absent when using the <span class=\"named\">{divi_name}</span> option."
                                        }
                                    }
                                },
                                "xml-divi":
                                {
                                    "title": "{xml_divi_name}",
                                    "intro": "When the result source is set to <span class=\"named\">{xml_divi_name}</span>, the <span class=\"named\">{result_source}</span> pane appears with two fields.",
                                    "divi-exe-path": "The first field specifies the path to the {divi} executable, which {bridge_name} needs in order to run it from the command line. We can set the path by pressing the <span class=\"named boxed\">{path_button}</span> button, then navigating to <span class=\"named\">{divi_exe}</span> in the file dialog.",
                                    "xml-file-path": "The second field holds the path to the {iof_xml} result file, to which our timing software of choice is expected to write new results at regular intervals. {bridge_name} will update the online results whenever it detects a change to this file. We can set the path by pressing the <span class=\"named boxed\">{path_button}</span> button, then navigating to the {iof_xml} result file in the file dialog.",
                                    "image":
                                    {
                                        "comp-created":
                                        {
                                            "alt": "The main program interface using the <span class=\"named\">{xml_divi_name}</span> result source. The <span class=\"named\">{result_source}</span> pane highlighted.",
                                            "caption": "The <span class=\"named\">{result_source}</span> pane when using the <span class=\"named\">{xml_divi_name}</span> option."
                                        }
                                    }
                                }
                            }
                        },
                        "competition-details":
                        {
                            "title": "Competition details",
                            "intro": "If we have followed the guide in order, the main interface should look something like this (the <span class=\"named\">{meos_divi_name}</span> result source is used on the image, but that is not important right now):",
                            "empty-fields": "We have made good progress, but there are still some empty fields left. In fact, we haven't even touched the <span class=\"named\">{competition}</span>, <span class=\"named\">{divisions}</span> or <span class=\"named\">{online}</span> panes at all! Let's change that, starting with the <span class=\"named\">{competition}</span> pane.",
                            "image":
                            {
                                "result-source-configured":
                                {
                                    "alt": "The main program interface after initial configuration has been completed.",
                                    "caption": "The main program interface after initial configuration."
                                }
                            },
                            "section":
                            {
                                "competition":
                                {
                                    "title": "Competition",
                                    "intro": "There are quite a few fields in the <span class=\"named\">{competition}</span> pane. Some of them relate to the real-world event, while others define interactions with the result server.",
                                    "credentials": "The first two fields are labeled <span class=\"named\">{comp_id}</span> and <span class=\"named\">{password}</span>. The values of these credentials were determined when we created the competition; the password chosen by us, and the competition ID assigned by the server. The credentials for a given competition cannot be changed, though changing the values in these fields allows us to work with a different competition. We only have one competition in play, however, so we will leave the credentials untouched.",
                                    "metadata": "The next four fields describe the real-world competition. <span class=\"named\">{name}</span> is the name of the competition, while <span class=\"named\">{organiser}</span> is the name of the organiser. The <span class=\"named\">{date}</span> field denotes the date of the competition in the indicated format. As an example, the 24th of September 2023 becomes 2023-09-24. Finally, <span class=\"named\">{timezone}</span> is the time zone at the real-world location where the competition takes place. {bridge_name} will suggest a time zone based on the configuration of the operating system on which it is running. The values of <span class=\"named\">{name}</span>, <span class=\"named\">{organiser}</span> and <span class=\"named\">{date}</span> are shown to users on the result website.",
                                    "datetime-purpose": "The result server uses the date and time zone on its front page. Here, all competitions are listed in cronological order, and any competitions scheduled for the current date will be highlighted in an additional list at the top of the page.",
                                    "metadata-meos": "If we are using the <span class=\"named\">{meos_divi_name}</span> result source, and {meos_name}' information server is online, there is a little shortcut available: Head up to the <span class=\"named\">{competition_menu}</span> <i>menu</i> and select <span class=\"named\">{import_metadata}</span>.",
                                    "metadata-meos-success": "For each of competition name, date and organiser fields filled out in {meos_name}, the corresponding field in {bridge_name} will be filled out.",
                                    "visibility": "There is one more setting in the <span class=\"named\">{competition}</span> pane: <span class=\"named\">{visibility}</span>. This setting determines if and how the competition can be found on the result server website. Three options are available:",
                                    "visibility-private": "The competition cannot be accessed via the website. This is the default option.",
                                    "visibility-hidden": "The competition can be viewed on the website via a direct link, but it is not listed on the front page.",
                                    "visibility-public": "The competition can be viewed on the website and is listed on the front page.",
                                    "visibility-change": "Let's set the visibility to <span class=\"named\">{visibility_hidden}</span> for now. This way, we will be able to see our competition as we work on it, but other people are unlikely to stumble upon our unfinished work. Note that changes made in {bridge_name} are only applied on the result server after we upload them &mdash; more on that in a moment.",
                                    "image":
                                    {
                                        "competition":
                                        {
                                            "alt": "The main program interface after initial configuration has been completed. The <span class=\"named\">{competition}</span> pane is highlighted.",
                                            "caption": "The <span class=\"named\">{competition}</span> pane after completing initial configuration."
                                        },
                                        "import-metadata":
                                        {
                                            "alt": "The main program interface with the <span class=\"named\">{competition_menu}</span> menu open, highlighting the <span class=\"named\">{import_metadata}</span> option.",
                                            "caption": "The <span class=\"named\">{import_metadata}</span> option under the <span class=\"named\">{competition_menu}</span> menu."
                                        },
                                        "import-metadata-response":
                                        {
                                            "alt": "Example log output after the competition name, organiser and date have been successfully imported from {meos_name}.",
                                            "caption": "Example log output after the competition name, organiser and date have been successfully imported from {meos_name}."
                                        }
                                    }
                                },
                                "divisions":
                                {
                                    "title": "Divisions",
                                    "intro": "It is finally time to configure our divisions. In the <span class=\"named\">{divisions}</span> pane, we find the division table &mdash; and don't worry; this isn't an elementary school maths lesson. There are three buttons along the bottom of the table: <span class=\"named\">{new_button}</span>, <span class=\"named\">{edit_button}</span> and <span class=\"named\">{delete_button}</span>. Press the <span class=\"named\">{new_button}</span> button to open the division editor.",
                                    "new-divi-divi-file": "When using the <span class=\"named\">{meos_divi_name}</span> or <span class=\"named\">{xml_divi_name}</span> result sources, the division editor has the fields <span class=\"named\">{divi_id}</span>, <span class=\"named\">{name}</span> and <span class=\"named\">{divi_config_path}</span>.",
                                    "new-divi-info-server": "Whenever using the <span class=\"named\">{divi_name}</span> result source, however, the <span class=\"named\">{divi_config_path}</span> field is replaced with the <span class=\"named\">{info_server_address}</span> field.",
                                    "divi-editor-field-divi-id": "Unlike the <span class=\"named\">{comp_id}</span>, the choice of <span class=\"named\">{divi_id}</span> is ours to make. For competitions with multiple divisions, the <span class=\"named\">{divi_id}</span> determines the sorting order of the radio buttons used to select divisions on the result website. Divisions are sorted in ascending order, and all <span class=\"named\">{divi_id}</span>s within the same competition must be unique. For competitions with only a single division, the <span class=\"named\">{divi_id}</span> is irrelevant.",
                                    "divi-editor-field-name": "The <span class=\"named\">{name}</span> field holds the label for the division, which is attached to its division selection radio button on the result website. Anything goes, but we should try to keep it concise to aid viewing on narrow displays, e.g. \"2nd division\".",
                                    "divi-editor-field-divi-file": "The <span class=\"named\">{divi_config_path}</span> field is where the path to the division configuration file exported from {divi} is provided, if applicable. The configuration file is of course unique for each division.",
                                    "divi-file-warning": "Due to implementation details, the result server is <i>only</i> compatible with certain layout settings in the division configuration file. In {divi}, these settings are found through the <span class=\"named\">{print}</span> menu (which, despite the name, applies to more than just printing), and then <span class=\"named\">{setup}</span>. Specifically, the <span class=\"named\">{html_css}</span> setting must be unchecked, and the <span class=\"named\">{layout}</span> must be set to <span class=\"named\">{blue}</span>. It is strongly recommended that any division configuration files pointed to in {bridge_name} are reserved <i>exclusively</i> for {bridge_name}, and that separate copies are made for other purposes, such as printing.",
                                    "divi-editor-field-info-server": "As mentioned, when the <span class=\"named\">{divi_name}</span> result source is in use, the division editor presents the <span class=\"named\">{info_server_address}</span> field. This is the network address of the information server opened in {divi}. For competitions with multiple divisions, each division will be associated with a unique instance of {divi}, each with its information server open on a unique network address &mdash; usually accomplished by using different ports if multiple instances of {divi} are running on the same computer. In {divi}, the information server dialog can be accessed through the <span class=\"named\">{info}</span> menu, and then <span class=\"named\">{info_server}</span>.",
                                    "new-divi-save": "Once the three fields are filled out, we can press the <span class=\"named\">{save_button}</span> button to save the division and close the division editor. If the competition has multiple divisions, we press the <span class=\"named\">{new_button}</span> button again and repeat the process to add another division. Additionally, existing divisions can be edited or deleted by selecting them from the division table and using the <span class=\"named\">{edit_button}</span> and <span class=\"named\">{delete_button}</span> buttons, respectively.",
                                    "image":
                                    {
                                        "divisions":
                                        {
                                            "alt": "The main program interface after the competition metadata has been filled out. The <span class=\"named\">{divisions}</span> pane is highlighted.",
                                            "caption": "The <span class=\"named\">{divisions}</span> pane after the competition metadata has been filled out."
                                        },
                                        "new-divi-divi-file":
                                        {
                                            "alt": "The division editor when using the <span class=\"named\">{meos_divi_name}</span> or <span class=\"named\">{xml_divi_name}</span> result sources.",
                                            "caption": "The division editor when using the <span class=\"named\">{meos_divi_name}</span> or <span class=\"named\">{xml_divi_name}</span> result sources."
                                        },
                                        "new-divi-info-server":
                                        {
                                            "alt": "The division editor when using the <span class=\"named\">{divi_name}</span> result source.",
                                            "caption": "The division editor when using the <span class=\"named\">{divi_name}</span> result source."
                                        },
                                        "divi-print-setup":
                                        {
                                            "alt": "The print setup dialog in {divi} with the important layout settings highlighted.",
                                            "caption": "The important layout settings in {divi}."
                                        },
                                        "divi-info-server":
                                        {
                                            "alt": "The information server dialog in {divi}.",
                                            "caption": "The information server dialog in {divi}."
                                        }
                                    }
                                },
                                "liveresults":
                                {
                                    "title": "{liveresults_name}",
                                    "intro": "While division matches are primarily about competitions between whole clubs, they do also contain individual results within the various classes. Services to publish live, individual results online already exist, e.g. <a href=\"{liveresults_link}\" target=\"_blank\">{liveresults_name}</a>.",
                                    "add-link": "For convenience, a link to the corresponding {liveresults_name} page can be shown on the division result page. In the <span class=\"named\">{online}</span> pane, the field <span class=\"named\">{liveresults_id}</span> can be found. When set to 0, it does nothing. However, as the name would suggest, we can enter the competition ID of our {liveresults_name} competition here. Doing so will add a prominent, orange button linking to the {liveresults_name} page. It will also update the link in the label, so if we click it, we can easily verify that the ID is correct.",
                                    "image":
                                    {
                                        "liveresults-field-highlighted":
                                        {
                                            "alt": "The <span class=\"named\">{online}</span> pane with the \"<span class=\"named\">{liveresults_id}</span>\" field highlighted.",
                                            "caption": "The <span class=\"named\">{online}</span> pane with the {liveresults_name}-related field highlighted."
                                        }
                                    }
                                },
                                "validate-configuration":
                                {
                                    "title": "Validate configuration",
                                    "intro": "At this point, our competition is fully configured &mdash; or at least it <i>should</i> be. To help us run a quick sanity check, {bridge_name} includes a basic configuration validation tool. This can remind us to fill out empty fields, and it can check the validity of file system paths. However, the tool is by no means perfect: It does not validate semantics, spelling or the status of network resources, to name just a few limitations.",
                                    "validate-manually": "To run the validation tool manually, head to the <span class=\"named\">{competition}</span> menu, then select the <span class=\"named\">{validate}</span> option.",
                                    "validate-response": "The result of the validation is printed to the log, and every failed check yields a warning. We should be sure to read them, as the warnings include their reasons in order to guide decision making: Is something specified incorrectly (or not at all), or is the warning safe to ignore? The latter case can arise when something is intentionally omitted or, in some cases, due to false positives. And, to reiterate, the tool finding 0 issues does <i>not</i> mean that the configuration is flawless, so we should merely consider the validation tool a supplement to the good old manual inspection.",
                                    "validate-at-startup": "In addition to manual runs, the validation tool also runs automatically whenever {bridge_name} is started.",
                                    "image":
                                    {
                                        "validate-highlighted":
                                        {
                                            "alt": "The main program interface with the <span class=\"named\">{competition}</span> menu open. The <span class=\"named\">{validate}</span> option, which runs the configuration validation tool, is highlighted.",
                                            "caption": "The validation tool is found under the <span class=\"named\">{competition}</span> menu."
                                        },
                                        "validate-response":
                                        {
                                            "alt": "Example log output after the configuration validation tool has found 0 issues.",
                                            "caption": "Example log output after the configuration validation tool has found 0 issues."
                                        }
                                    }
                                },
                                "upload-your-changes":
                                {
                                    "title": "Upload changes",
                                    "intro": "When introducing the <span class=\"named\">{visibility}</span> setting, I briefly mentioned that changes need to be uploaded to the server to take effect. Well, we have made a bunch of changes by now, so how about we give it a try? We look at the <span class=\"named\">{online}</span> pane again, but this time, we focus our attention on some of the buttons.",
                                    "update-metadata": "First, the <span class=\"named\">{update_metadata}</span> button. Pressing this button bundles up all the competition and division metadata that we just provided, uploads it to the {division_result_server} at the address we have specified, and, if the credentials are valid, updates the metadata of our competition. The response from the server will be printed in the log.",
                                    "view-in-browser": "Of course, seeing the metadata printed to a soulless log output is not nearly as exciting as viewing the actual result page. Fortunately, the aptly-named <span class=\"named\">{view_in_browser}</span> button allows us to easily do exactly that.",
                                    "image":
                                    {
                                        "online-buttons-highlighted":
                                        {
                                            "alt": "The main program interface after all metadata has been provided. Four buttons in the <span class=\"named\">{online}</span> pane are highlighted.",
                                            "caption": "The buttons in the <span class=\"named\">{online}</span> pane."
                                        },
                                        "update-metadata-response":
                                        {
                                            "alt": "Example log output after the competition and division metadata has been uploaded to the {division_result_server} successfully.",
                                            "caption": "Example log output after the competition and division metadata has been uploaded to the {division_result_server} successfully."
                                        }
                                    }
                                }
                            }
                        },
                        "publish-results":
                        {
                            "title": "Publish results",
                            "intro": "Configuration is complete, and we are now ready to upload results. Well, <i>almost</i> ready. Unless the event has already started, we have no results yet &mdash; and we are of course sensible enough to prepare our setup <i>before</i> event day. So, if we want to test the entire result publishing pipeline (and we do), we will need some fake results.",
                            "section":
                            {
                                "fake-results":
                                {
                                    "title": "Creating fake results",
                                    "intro": "Depending on the particular setup, there may be multiple ways to produce fake results for testing &mdash; some more convenient than others. Common for all of them, however, is that they should be kept separate from the real deal, be it via backups, duplicates, restore points, forks or whatever mechanism the setup provides.",
                                    "section":
                                    {
                                        "manual":
                                        {
                                            "title": "Manual approach",
                                            "intro": "Results are not magic, so regardless of setup, they can usually be constructed \"by hand\". Participants can be created, and their start and finish times can be assigned, providing fine-grained control over the mocked results. Timing programs often make this easy, if a bit tedious. Of course, it is also possible to craft results in {iof_xml} format from scratch, though this is likely even more tedious.",
                                            "scaling": "Creating and assigning results to a handful of participants to run a basic test is feasible, but for larger scale testing, a more automatic approach is desirable."
                                        },
                                        "automatic":
                                        {
                                            "title": "Automatic approach",
                                            "intro": "Some timing programs feature built-in result mocking capabilities, fascilitating easy production of fake results for more comprehensive testing. Depending on our result source, we may be able to take advantage of this.",
                                            "section":
                                            {
                                                "meos-divi":
                                                {
                                                    "title": "{meos_divi_name}",
                                                    "intro": "When using the <span class=\"named\">{meos_divi_name}</span> result source, we can take advantage of one of {meos}' built-in services: <span class=\"named\">Punching Test</span>.",
                                                    "prepare": "First, we need to ensure that our setup is ready. Since we are dealing with division matches, we need to be fairly strict here:",
                                                    "prep0": "One or more courses must be defined in {meos}. Importing the <i>real</i> courses may be easiest, though it is not required.",
                                                    "prep1": "Classes corresponding to the real division match classes must be defined in {meos}.",
                                                    "prep2": "Participants representing clubs from the relevant divisions must be defined in {meos}. Importing real signups may be easiest, though fake names can be used as long as the clubs are defined correctly.",
                                                    "find-punching-test": "In a <i>copy</i> of our {meos} competition, we navigate to the <span class=\"named\">Services</span> tab and choose <span class=\"named\">Punching Test</span>.",
                                                    "run-punching-test": "The service has a few parameters, but the defaults should be sufficient for our needs. Once we start the service, a steady stream of fake results will be produced. We should probably pause it until we are ready to upload division results, as we would quickly run out of new results otherwise.",
                                                    "image":
                                                    {
                                                        "meos-services-tab":
                                                        {
                                                            "alt": "The <span class=\"named\">Punching Test</span> feature in {meos}' <span class=\"named\">Services</span> tab.",
                                                            "caption": "The <span class=\"named\">Punching Test</span> feature in {meos}' <span class=\"named\">Services</span> tab."
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "prepare-publishing-pipeline":
                                {
                                    "title": "Prepare publishing pipeline",
                                    "intro": "To upload results, the entire result publishing pipeline must be available. Given our prior efforts, this should be not be an issue. Here is a quick checklist:",
                                    "check0": "{bridge_name} is configured",
                                    "check1": "The {division_result_server} is online",
                                    "check2": "Our result source is available",
                                    "more-detail": "We have already covered these topics earlier in the guide, but particularly for the result sources, a slightly more detailed summary may be useful.",
                                    "section":
                                    {
                                        "meos-divi":
                                        {
                                            "title": "{meos_divi_name}",
                                            "intro": "As the name of this result source suggests, both {meos} and {divi} need to be available.",
                                            "meos": "From {meos}, {bridge_name} only needs access to the information server, so we need to ensure that the information server is online. As previously mentioned, it does not matter which computer {meos} is running on, as long as the information server can be reached over the network.",
                                            "divi": "Meanwhile, {divi} needs to be installed on the same computer as {bridge_name}. It does not <i>need</i> to be running, though it <i>can</i> be if other purposes (such as printing) require it &mdash; just keep the configuration files separate."
                                        },
                                        "divi":
                                        {
                                            "title": "{divi_name}",
                                            "intro": "This result source only <i>directly</i> depends on {divi}, though {divi} of course depends on another program to feed it \"raw\" results. For every division, one instance of {divi} must be running, and each instance must have its information server open on a unique network address. {bridge_name} and the {divi} instances can all running on the same computer, can each run on their own computer, or anything in between &mdash; as long as our network configuration allows it."
                                        },
                                        "xml-divi":
                                        {
                                            "title": "{xml_divi_name}",
                                            "intro": "For this result source, {bridge_name} is concerned with {divi} and the {iof_xml} results file.",
                                            "iof-xml": "The {iof_xml} results file needs to be available on the file system for {bridge_name} to read. The origin of the file is irrelevant, but {bridge_name} expects this file to be overwritten with new results regularly.",
                                            "divi": "{divi} must also be installed on the same computer as {bridge_name}. It does not <i>need</i> to be running, though it <i>can</i> be if other purposes (such as printing) require it &mdash; we just need to keep the configuration files separate."
                                        }
                                    }
                                },
                                "upload-results":
                                {
                                    "title": "Upload results",
                                    "intro": "We finally return to the <span class=\"named\">{update_results}</span> pane. We have previous defined the <span class=\"named\">{working_directory}</span>, so there is not much left to configure here. In fact, only the field <span class=\"named\">{update_interval}</span> remains &mdash; and with the <span class=\"named\">{xml_divi_name}</span> result source, that field is hidden. For now, we will ignore the update interval and focus on just a single upload.",
                                    "image":
                                    {
                                        "update-results-highlighted":
                                        {
                                            "alt": "The main program interface with the <span class=\"named\">{update_results}</span> pane highlighted.",
                                            "caption": "The <span class=\"named\">{update_results}</span> pane."
                                        }
                                    },
                                    "section":
                                    {
                                        "run-once":
                                        {
                                            "title": "Run once",
                                            "intro": "Pressing the <span class=\"named\">{run_once}</span> button triggers one run of the result publishing pipeline. {bridge_name} reads fresh results from the result source, bundles them up alongside the competition and division metadata, and sends it all to the {division_result_server}. The server first applies any changes to the metadata, and then updates the results for each division. This means that every result update is also an implicit metadata update.",
                                            "logs": "The exact stages of the pipeline depend on the result source, but the result of each stage is printed to the log. If successful, the updated results can be viewed on the result page in the browser after a short moment.",
                                            "image":
                                            {
                                                "update-results-log":
                                                {
                                                    "alt": "Example log output after successfully fetching and uploading results when using the <span class=\"named\">{meos_divi_name}</span> result source.",
                                                    "caption": "Example log output after successfully fetching and uploading results when using the <span class=\"named\">{meos_divi_name}</span> result source."
                                                }
                                            }
                                        },
                                        "run-continuously":
                                        {
                                            "title": "Run continuously",
                                            "intro": "Running the result publishing pipeline once is all well and good, but to offer anything resembling <i>live</i> results, we need to publish continously throughout the competition.",
                                            "start-stop": "For this, we use the <span class=\"named\">{start}</span> and <span class=\"named\">{stop}</span> buttons. Pressing the <span class=\"named\">{start}</span> button publishes fresh result immediately, and then continues to publish results indefinitely &mdash; or at least until we press the <span class=\"named\">{stop}</span> button. The exact timing of the continous publication runs depends on the result source. Additionally, note that pressing the <span class=\"named\">{stop}</span> button in the middle of a publishing run does <i>not</i> cancel that run, but merely avoids starting new runs.",
                                            "section":
                                            {
                                                "update-interval":
                                                {
                                                    "title": "Update interval",
                                                    "intro": "As mentioned earlier, using the <span class=\"named\">{xml_divi}</span> result source causes the result publishing pipeline to be triggered automatically whenever the <span class=\"named\">{iof_xml}</span> result file changes while running continuously. As such, the concept of an \"update interval\" does not apply &mdash; at least not within the confines of {bridge_name}.",
                                                    "when-it-applies": "For the <span class=\"named\">{meos_divi_name}</span> and <span class=\"named\">{divi_name}</span> result sources, however, the value of the field <span class=\"named\">{update_interval}</span> determines how frequently {bridge_name} should poll the result source for new results. The default value of 60 seconds is likely okay, but depending on our setup, we may wish to adjust it.",
                                                    "reasons-to-decrease0": "The primary reason to decrease the update interval is quite simple: freshness of results. With a polling strategy, some amount of latency is added to the result publishing pipeline. In the best case, we happen to poll for results as soon as they are made available, incurring minimal delay. In the worst case, we poll just <i>before</i> new results come in, meaning they will have to wait out the entire duration of the update interval before being published. Over time, this added latency averages out to about half the update interval, so naturally, reducing the update interval also reduces the latency, thus providing fresher results.",
                                                    "reasons-to-increase0": "Unfortunately, we cannot simply push the update interval down to 0, as there are a few limiting factors at play. For a start, the result publishing pipeline takes time to run (though this is much less of a factor with the <span class=\"named\">{divi_name}</span> result source). An update interval shorter than this time is pointless, as new runs will not be started before an ongoing run is finished.",
                                                    "reasons-to-increase1": "Additionally, we do not have unlimited resources. Frequently updating results may consume a significant chunk of the available bandwidth when using e.g. a mobile network in a remote location, as is not uncommon at orienteering events. This is less relevant with the <span class=\"named\">{meos_divi_name}</span> result source, since it checks for changes before committing to an upload.",
                                                    "reasons-to-increase2": "Furthermore, low-end setups may struggle to keep up with all the data flows of card readouts, signups, result exports and so on. These tasks usually have to be handled synchronously to avoid data corruption, so if our setup is spread across a network, and the network is slow or unreliable, each task may be accompanied by a sizeable amount of latency. In such an environment, running too many tasks too frequently can significantly reduce the responsiveness of the system, leading to stutters, freezes and similar issues."
                                                }
                                            }
                                        },
                                        "delete-results":
                                        {
                                            "title": "Delete results",
                                            "intro": "When we upload new results, the old results on the server are overwritten, so manually deleting results is usually not required. Still, we may wish to do so anyways. If we uploaded dummy results to test our setup, it would be a good idea to delete them before e.g. sharing the link to our results page in the bulletin.",
                                            "delete-button": "Manually deleting our results is simple: Looking at the <span class=\"named\">{online}</span> pane, we find the aptly-named <span class=\"named\">{delete_button}</span> button. Upon pressing the button, we are prompted for confirmation, and, if confirmed, the results on the server will be deleted.",
                                            "blank-results": "Rather than deleting the results, another option is to upload blank results instead. Uploading results from the <i>real</i> competition before it begins allows the result server to display a more meaningful page with an overview of the participating clubs as well as the current standings.",
                                            "image":
                                            {
                                                "delete-button":
                                                {
                                                    "alt": "The <span class=\"named\">{online}</span> pane with the <span class=\"named\">{delete_button}</span> button highlighted.",
                                                    "caption": "The <span class=\"named\">{online}</span> pane with the <span class=\"named\">{delete_button}</span> button highlighted."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "privacy":
        {
            "title": "Privacy",
            "intro": "Usually, this is where you'd be met with an endless page of legalese, describing the depth of personal information collected, how many vaguely-trustworthy third parties your secrets are shared with, what flavour of cookie is used to collect your data, and other stuff that nobody actually reads. However, Division Result Bridge is not a vehicle for profit, so selling user data to advertisers is wholly uninteresting.",
            "tldr": "The short version, then, is that your personal data is, well, <i>yours</i>. Division Result Bridge does not collect personal data. Still, if you want the slightly longer version, whatever data <i>is</i> collected and stored in one way or another is described here, both for this website and for the application itself.",
            "website":
            {
                "title": "Website",
                "content": "This website only stores basic user preferences. These are settings for language and theme, which can be changed from the menu in the top right. The data is stored by your browser on your device using the <a href=\"{web_storage_api_link}\" target=\"_blank\">Web Storage API</a> &mdash; no cookies required. It is not cleared automatically, but browsers usually provide the option to clear the \"browser cache\", \"locally stored data\" or something along those lines."
            },
            "application":
            {
                "title": "Application",
                "settings": "All data displayed in Division Result Bridge is saved to disk when the application is closed to be loaded again on next startup. As detailed on <a href=\"{qsettings_link}\" target=\"_blank\">Qt's documentation for QSettings</a>, the save mechanism varies across platforms, but on Windows, the registry is used. Additionally, a subset this data can be exported to a JSON file at the request of the user.",
                "results": "Of course, the division results do include some personal information of the participants as collected for the competition, e.g. name, club and class. However, this is not <i>sensitive</i> information, and it is in line with expectations at orienteering events. Division Result Bridge does not actually interact with the results and participants themselves: it fetches complete HTML files from <a href=\"{divi_link}\" target=\"_blank\">{divi_name}</a>, strips styling, adds a little bit of markup for display on the web, and passes them on to the server."
            }
        },
        "license":
        {
            "title": "License",
            "fallback": "<a href=\"{license_link}\" target=\"_blank\">Click here to view the license</a>."
        },
        "about":
        {
            "title": "About",
            "icon-credit": "Icons by <a href=\"{icons_link}\" target=\"_blank\">{icons_name}</a>."
        },
        "source":
        {
            "title": "Source"
        }
    }
}
